x <- 2
typeof(x)
y <- c(2)
typeof(y)
z <- c(2, 3)
typeof(z)
a <- c(2,)
typeof(a)
a <- c(2,"")
a <- c(2,"red")
typeof(a)
a <- c(2,red)
typeof(a)
mode(a)
?c
typoef(shades)
typeof(shades)
typeof(shades)
shades <- c("light pink", "hot pink", "deep pink") # create object called animals
shades
typeof(shades)
?typeof
rmarkdown::pandoc_version()
rmarkdown::pandoc_version()
typeof(x)
x <- 30
typeof(x)
zips <- c(10025, 10027, 02468)
zips
?coercion-functions
?coercion-function
?coercion-function
?vector-coercion
?as_double
?vector-coercion
?length
?c
quakes1 <- c(1565, NA, 1566, 1808, 1637)
mean(quakes1)
quakes1 <- c(1565, NULL, 1566, 1808, 1637)
mean(quakes1)
quakes[1]
quakes[2:4] #Note that the : operator give us a sequence
quakes <- c(1565, 1696, 1566, 1808, 1637)
quakes
quakes[1]
quakes[2:4] #Note that the : operator give us a sequence
quakes[5] <- NA
quakes
?cbind
m[2,3]
m <- cbind(years, quakes)
m[2,3]
m[3,2]
?as.character
?as.string
?as.string
??as.string
m2
?data.frame
m2.df
class(m2.df)
rm(x)
rm(zips)
magnitude <- c("5+", "5+", "5+", "5+", "5+", "5+")
years <- c(2015, 2016, 2017, 2018, 2019, 2020) # create object called years as a vector with 3 integer elements
years # print object x
typeof(years)
rm(quakes)
rm(quakes1)
quakes <- c(1565, 1696, 1566, 1808, 1637)
quakes
quakes[6] <- NA #Here we're adding a sixth element with the value NA
quakes
quakes
quakes1 <- quakes1
quakes1 <- quakes
quakes1
quakes[6] <- NA
quakes[6] <- NULL
quakes
?str
?rm
rm(years)
devtools::install.package("hadley/emo")
install.package(emojifont)
install.packages(emojifont)
install.packages("emojifont")
install.packages("rlang")
5*5
install.packages("rmarkdown")
library(emojifont)
uninstall.packages("emojifont")
remove.packages("emojifont", lib="~/R/win-library/4.0")
install.packages("rlang")
install.packages("rlang")
library(rlang)
library(rlang)
install.packages("rlang")
library(gapminder)
gapminder
subset(gapminder, country == "South Korea")
subset(gapminder, country == "Korea")
subset(gapminder, country == "India")
load.filename(coronavirus.rda)
load(coronavirus.rda)
getwd()
load("coronavirus.rda"")
load("coronavirus.rda")
?str(coronavirus)
str(coronavirus)
corona.df <- as.data.frame(coronavirus)
View(corona.df)
rm(corona.df)
library(gapminder)
gapminder
?filter
gapminder
gapminder
print(gapminder)
levels(country_codes)
levels(country)
levels(gapminder$country)
library(tidyverse)
load("coronavirus.rda")
str(coronavirus) # note that we haven't discussed data variables yet
mutate(coronavirus, type.fac = as.factor(type))
str(mutate(coronavirus, type.fac = as.factor(type)))
covid.df1 <- mutate(coronavirus, type.fac = as.factor(type)) %>%
select(-type)
head(covid.df1, n = 5)
?levels
levels(covid.df1$type.fac)
covid_confirmed.df <- filter(covid.df1, type.fac == "confirmed")
head(covid_confirmed.df, n = 5)
summary(covid_confirmed.df$type.fac)
rm(covid.df1)
covid_confirmed.df <- mutate(covid_confirmed.df, type.fac = as.factor(type.fac))
summary(covid_confirmed.df$type.fac)
covid_confirmed.df <- mutate(covid_confirmed.df, type = as.character(type.fac))
summary(covid_confirmed.df$type)
levels(covid_confirmed.df$type)
covid_confirmed.df <- mutate(covid_confirmed.df, type = as.character(type.fac)) %>%
mutate(covid_confirmed.df, type.fac = as.factor(type)) %>%
select(-type)
summary(covid_confirmed.df$type.fac)
str(covid_confirmed.df)
view(covid_confirmed.df)
?summarise
summarise(covid_confirmed.df, n_distinct(country))
?summary
summarise(covid_confirmed.df, n_distinct(date))
arrange(covid_confirmed.df, desc(date))
head(arrange(covid_confirmed.df, desc(date)), n = 1)
head(arrange(covid_confirmed.df, desc(date)) %>% select(date), n = 1)
arrange(covid_confirmed.df, desc(date)) %>% head(n = 1)
arrange(covid_confirmed.df, desc(date)) %>% select(date) %>% head(n = 1)
summarise(covid_confirmed_last.df, min(date))
covid_confirmed_last.df <- filter(covid_confirmed.df, date == "2020-07-18")
summarise(covid_confirmed_last.df, min(date))
covid_confirmed_nz.df <- filter(covid_confirmed.df, country == "New Zealand")
summarise(covid_confirmed.df, n_distinct(country))
covid_confirmed_nz.df <- filter(covid_confirmed.df, country == "New Zealand")
summarise(covid_confirmed_nz.df, n_distinct(country))
?summarise
summary(covid_confirmed_last.df)
summary(covid_confirmed.df$type.fac)
?summary
?length
?summarise
View(covid_confirmed_nz.df)
View(covid_confirmed_nz.df)
summarise(covid_confirmed_last.df, max(cases))
summarise(covid_confirmed_last.df, max(cases))
select(covid_confirmed_last.df, country, cases) %>%
arrange(desc(cases)) %>%
head(n = 5)
summarise(covid_confirmed_nz.df, n_distinct(country))
summarise(covid_confirmed_nz.df, mean(cases), min(cases), max(cases))
View(covid_confirmed_nz.df)
summarise(covid_confirmed_nz.df, nz_mean = mean(cases), nz_min = min(cases), nz_max = max(cases))
View(covid_confirmed_nz.df)
View(covid_confirmed_nz.df)
View(covid_confirmed_nz.df)
View(covid_confirmed_nz.df)
arrange(covid_confirmed_nz.df, desc(date))
arrange(covid_confirmed_nz.df, desc(date))[,30]
arrange(covid_confirmed_nz.df, desc(date))[30,]
arrange(covid_confirmed_nz.df, desc(date))[1:30,]
arrange(covid_confirmed_nz.df, desc(date))[1:30,] %>%
summarise(nz_july_mean = mean(cases))
?c
m1[3,]
m1 <- cbind(years, quakes)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
years <- c(2015, 2016, 2017, 2018, 2019, 2020) # create object called years as a vector with 3 integer elements
years # print object x
typeof(years)
x <- 13
typeof(x)
y <- c(13)
typeof(y)
shades <- c("light pink", "hot pink", "deep pink")
shades
typeof(shades)
v2 <- c(TRUE, TRUE, FALSE)
v2
typeof(v2)
gender <- c("F", "M", "F", "NB", "O")
typeof(gender)
gender.fact <- as.factor(gender) #as.factor function coerces gender to a factor
typeof(gender.fact)
gender
gender.fact
attributes(gender.fact)
levels(gender.fact)
quakes <- c(1565, 1696, 1566, 1808, 1637)
quakes
quakes[1]
quakes[2:4] #Note that the : operator give us a sequence
quakes[c(2,3)] #Here we're using a vector to identify elements of a larger vector
quakes[6] <- NA #Here we're adding a sixth element with the value NA
quakes
v4 <- c(4, "six", TRUE)
v4
typeof(v4)
m1 <- cbind(years, quakes)
m1
typeof(m1)
m1[3,]
m1[,2]
m1[5:6, 1:2]
?summary
?na.omit
na.omit(quakes2)
